<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>gnu &#8212; Киевское направление</title>
	<atom:link href="https://konnov.name/tag/gnu/feed" rel="self" type="application/rss+xml" />
	<link>https://konnov.name</link>
	<description>Сайт о путешествиях и разных вылазках.</description>
	<lastBuildDate>Wed, 07 Mar 2007 22:19:00 +0000</lastBuildDate>
	<language>ru-RU</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0</generator>

<image>
	<url>https://konnov.name/wp-content/uploads/2022/06/cropped-ico-6399466-6783971-32x32.png</url>
	<title>gnu &#8212; Киевское направление</title>
	<link>https://konnov.name</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>GnuPG &#8212; краткая инструкция</title>
		<link>https://konnov.name/gnupg-kratkaya-instrukcziya</link>
		
		<dc:creator><![CDATA[Киевское направление]]></dc:creator>
		<pubDate>Wed, 07 Mar 2007 22:19:00 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[gnu]]></category>
		<category><![CDATA[gnupg]]></category>
		<category><![CDATA[разное]]></category>
		<guid isPermaLink="false">https://konnov.name/gnupg-%d0%ba%d1%80%d0%b0%d1%82%d0%ba%d0%b0%d1%8f-%d0%b8%d0%bd%d1%81%d1%82%d1%80%d1%83%d0%ba%d1%86%d0%b8%d1%8f</guid>

					<description><![CDATA[1. Создаём ключи приватный и публичный gpg --full-generate-key Тут всё просто без определенных примудростей, вам только перед данной операцией нужно придумать фразу-пароль и запомнить. Создаются ключи и сертификат отзыва. Я себе выбрал (1) RSA и RSA (по умолчанию) , 4096 бит и срок действия 2 года. 2. Убедимся что ключи создались gpg --list-keys gpg --list-secret-keys… <span class="read-more"><a href="https://konnov.name/gnupg-kratkaya-instrukcziya">Читать далее &#187;</a></span>]]></description>
										<content:encoded><![CDATA[<p>Создаём ключи приватный и публичный Тут всё просто без определенных примудростей, вам только перед данной операцией нужно придумать фразу-пароль и запомнить. Создаются ключи и сертификат отзыва. Я себе выбрал (1) RSA и RSA (по умолчанию) , 4096 бит и срок действия 2 года. 2. Убедимся что ключи создались gpg &mdash;list-secret-keys gpg &mdash;list-public-keys Данная комманада просто выводит список...</p>
<p><a href="https://konnov.name/gnupg-kratkaya-instrukcziya" rel="nofollow">Источник</a></p>]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Как пользоваться GNU Tar?</title>
		<link>https://konnov.name/kak-polzovatsya-gnu-tar</link>
		
		<dc:creator><![CDATA[Киевское направление]]></dc:creator>
		<pubDate>Wed, 07 Mar 2007 08:18:00 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[gnu]]></category>
		<category><![CDATA[tar]]></category>
		<guid isPermaLink="false">https://konnov.name/%d0%ba%d0%b0%d0%ba-%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d1%82%d1%8c%d1%81%d1%8f-gnu-tar</guid>

					<description><![CDATA[Не буду рассказывать о всех преимуществах GNU Tar, но скажу что он кроссплатформенный, бесплатный и свободный с открытым кодом. Создать архив tar -vvzcf nazvanie.tar folder/ --totals --block-number tar -vvzcf nazvanie.tar folder/ --totals tar -vzcf nazvanie.tar folder/ tar -vcf nazvanie.tar folder/ Предпросмотр архива tar -tf nazvanie.tar Извлечь файлы из архива tar -vxf nazvanie.tar tar -vxvf nazvanie.tar… <span class="read-more"><a href="https://konnov.name/kak-polzovatsya-gnu-tar">Читать далее &#187;</a></span>]]></description>
										<content:encoded><![CDATA[<p>Не буду рассказывать о всех преимуществах GNU Tar, но скажу что он кроссплатформенный, бесплатный и свободный с открытым кодом. Создать архив tar -vvzcf nazvanie.tar folder/ &mdash;totals tar -vzcf nazvanie.tar folder/ tar -vcf nazvanie.tar folder/ Предпросмотр архива Извлечь файлы из архива tar -vxvf nazvanie.tar &mdash;totals tar -vxvf nazvanie.tar &mdash;totals &mdash;block-number Основные и необходимые команды я...</p>
<p><a href="https://konnov.name/kak-polzovatsya-gnu-tar" rel="nofollow">Источник</a></p>]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>GNU LibreJS — только свободный JavaScript</title>
		<link>https://konnov.name/gnu-librejs-tolko-svobodnyj-javascript</link>
		
		<dc:creator><![CDATA[Киевское направление]]></dc:creator>
		<pubDate>Wed, 07 Mar 2007 08:03:00 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[gnu]]></category>
		<category><![CDATA[javascript]]></category>
		<guid isPermaLink="false">https://konnov.name/gnu-librejs-%d1%82%d0%be%d0%bb%d1%8c%d0%ba%d0%be-%d1%81%d0%b2%d0%be%d0%b1%d0%be%d0%b4%d0%bd%d1%8b%d0%b9-javascript</guid>

					<description><![CDATA[Я не разработчик, поэтому в технические детали JavaScript не углублялся, но пришлось. Оказывается, даже большинство разработчиков стали жертвами JavaScript, есть свободные и соответственно не свободные JavaScript. Разработчики опять же в большинстве своём используют не свободные скрипты — это и есть потенциальная опасность, где проверить или исправить код нет возможности. Такие скрипты нужно избегать. Каждый сайт… <span class="read-more"><a href="https://konnov.name/gnu-librejs-tolko-svobodnyj-javascript">Читать далее &#187;</a></span>]]></description>
										<content:encoded><![CDATA[<p>Я не разработчик, поэтому в технические детали JavaScript не углублялся, но пришлось. Оказывается, даже большинство разработчиков стали жертвами JavaScript, есть свободные и соответственно не свободные JavaScript. Разработчики опять же в большинстве своём используют не свободные скрипты &mdash; это и есть потенциальная опасность, где проверить или исправить код нет возможности.</p>
<p><a href="https://konnov.name/gnu-librejs-tolko-svobodnyj-javascript" rel="nofollow">Источник</a></p>]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
